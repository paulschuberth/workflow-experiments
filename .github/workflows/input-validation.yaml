name: SemVer input validation

on:
  workflow_dispatch:
jobs:
  pre-checks:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ['dev', 'testing', 'int', 'qs', 'prod']
        tag: ['latest', 'v1.4.0']
    steps:
      - name: Check input tag
        id: tag-check
        run: |
          import re
          tag="${{ matrix.tag }}"
          # Basic regex to match SemVer tags starting with 'v' followed by major, minor,
          # and patch versions, with an optional arbitrary qualifier at the end.
          semverPattern = "v(\\d+\\.?){3}(-.+)?"
          if re.match(semverPattern, tag):
              print(f'::set-output name=isSemanticVersion::true')
          else:
              print(f'::set-output name=isSemanticVersion::false')

      # On stages int, qs, and prod we require the tag to be a semantic version
      # On stages dev, and testing these restrictions do not apply.
      - name: Check tag compliance
        if: ${{ !((matrix.environment == 'dev' || matrix.environment == 'testing') || steps.tag-check.outputs.isSemanticVersion == 'true') }}
        run: |
          echo "::warning title=Invalid deployment tag::In the future a deployment into ${{ matrix.environment }} using ${{ matrix.tag }} will be rejected."
